version: '3'

services: 

    front:
        build: ./front
        container_name: frontend
        command: npm run start
        ports: 
            - "3000:3000"
        restart: unless-stopped
        networks: 
            - docker-learning

    http-server: 
        build: ./back-main
        command: npm run start
        container_name: docker-learning
        restart: unless-stopped
        ports: 
            - '8080:8080'
        environment: 
            - NODE_ENV=production
            - HTTP_PORT=8080
            - DB_URI=mongodb://mongo-db:27017/app
            - SECOND_BACK_URL=http://http-server-second:8081
        depends_on: 
            - mongo-db
        networks: 
            - docker-learning

    http-server-second: 
        build: ./second-main
        command: npm run start
        container_name: docker-learning-second
        restart: unless-stopped
        ports: 
            - '8081:8081'
        environment: 
            - NODE_ENV=production
            - HTTP_PORT=8081
            - DB_URI=mongodb://mongo-second-db:27017/app
        depends_on: 
            - mongo-second-db
        networks: 
            - docker-learning


    mongo-second-db: 
        image: mongo:latest
        container_name: docker-learning-db-second
        volumes:
            - type: volume
              source: mongodb_secondHttpServer
              target: /data/seconddb
        networks: 
            - docker-learning
            
    mongo-db: 
        image: mongo:latest
        container_name: docker-learning-db
        volumes:
            - type: volume
              source: mongodb_httpServer
              target: /data/db
        networks: 
            - docker-learning

    nginx:  
        image: nginx:stable-alpine
        container_name: nginx
        ports: 
            - "80:80"
        volumes: 
            - ./nginx/nginx.conf.prod:/etc/nginx/conf.d/nginx.conf
        depends_on: 
            - front
        networks: 
            - docker-learning

volumes: 
    mongodb_httpServer:
    mongodb_secondHttpServer:

networks: 
    docker-learning:
        driver: bridge